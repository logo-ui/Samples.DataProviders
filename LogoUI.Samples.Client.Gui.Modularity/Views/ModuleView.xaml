<UserControl x:Class="LogoUI.Samples.Client.Gui.Modularity.Views.ModuleView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"             
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:navigation="clr-namespace:LogoFX.UI.Navigation;assembly=LogoFX.UI.Navigation"
             xmlns:triggers="clr-namespace:LogoFX.UI.Views.Infra.Interactivity.Triggers;assembly=LogoFX.UI.Views.Infra"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             mc:Ignorable="d"              
             d:DesignHeight="300" d:DesignWidth="300">
    <Grid>
        <Button Width="Auto" 
                                    Height="24" 
                                    Margin="5,0,0,0" 
                                    Content="{Binding Name}">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Foreground" Value="DarkGray" />
                    <Setter Property="FontSize" Value="18" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <ContentPresenter x:Name="Content" ContentSource="Content">
                                    <ContentPresenter.Resources>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}, Mode=TwoWay}" />
                                            <Setter Property="FontSize" Value="{Binding Path=FontSize, RelativeSource={RelativeSource AncestorType=Button}, Mode=TwoWay}" />
                                        </Style>
                                    </ContentPresenter.Resources>
                                </ContentPresenter>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                                        <Setter Property="Foreground" Value="Black" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="DodgerBlue" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="Cursor" Value="Hand" />
                </Style>
            </Button.Style>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                    <navigation:NavigateAction ItemType="{Binding RootModelType}" NavigationService="{Binding Path=NavigationService}" />
                </i:EventTrigger>
                <triggers:XDataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.ActiveItem}" 
                                                       Value="{Binding RootViewModel}"
                                                       Comparison="Equal">
                    <ei:ChangePropertyAction PropertyName="IsEnabled" Value="False" />
                </triggers:XDataTrigger>
                <triggers:XDataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.ActiveItem}" 
                                                       Value="{Binding RootViewModel}"
                                                       Comparison="NotEqual">
                    <ei:ChangePropertyAction PropertyName="IsEnabled" Value="True" />
                </triggers:XDataTrigger>
            </i:Interaction.Triggers>
        </Button>
    </Grid>
</UserControl>
